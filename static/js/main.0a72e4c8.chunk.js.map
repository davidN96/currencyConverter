{"version":3,"sources":["Components/AppContainer/AppContainer.js","Components/CurrencyContainer/CurrencyContainer.js","Components/AppCard/AppCard.js","Layouts/App/App.js","Theme/theme.js","index.js"],"names":["useStyles","makeStyles","root","width","marginLeft","AppContainer","children","classes","className","Grid","container","justify","textAlign","select","borderRadius","border","backgroundColor","icon","fontSize","input","CurrencyContainer","currency","isChanged","globalValue","updateValue","useState","undefined","setValue","item","xs","color","TextField","label","value","usd","eur","disabled","onChange","e","val","target","replace","witdh","margin","title","marginRight","header","borderBottom","iconWrapper","padding","marginBottom","cursor","valuePanel","AppCard","isLoaded","updateGlobal","globalCurrencies","usdRef","useRef","eurRef","btnRef","setIsChanged","currencyValue","setCurrencyValue","useEffect","console","log","md","Card","CardHeader","avatar","Typography","variant","subheader","CardContent","RootRef","rootRef","onClick","gsap","from","current","rotation","duration","to","CircularProgress","App","currenciesPrices","setCurrenciesPrices","dataLoaded","setDataLoaded","currenciesVals","setCurrenciesVals","get","then","data","prices","rates","filter","rate","code","mid","changeVals","toFixed","updateValues","theme","createMuiTheme","palette","primary","main","bg","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.0a72e4c8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Material Ui components\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"96vw\",\r\n    marginLeft: \"2vw\"\r\n  }\r\n});\r\n\r\nconst AppContainer = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container justify=\"center\">\r\n        {children}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppContainer;\r\n","import React, { useState } from \"react\";\r\n\r\n// MaterialUI components\r\nimport { Grid, TextField, makeStyles } from \"@material-ui/core\";\r\n\r\n// MaterialUI icons\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport EuroSymbolIcon from \"@material-ui/icons/EuroSymbol\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  select: {\r\n    borderRadius: \"50%\",\r\n    border: \"none\",\r\n    backgroundColor: \"none\"\r\n  },\r\n  icon: {\r\n    fontSize: \"3rem\"\r\n  },\r\n  input: {\r\n    width: \"25%\",\r\n    textAlign: \"center\",\r\n    marginLeft: \"3vw\",\r\n    fontSize: \"3rem\"\r\n  }\r\n});\r\n\r\nconst CurrencyContainer = ({\r\n  currency,\r\n  isChanged,\r\n  globalValue,\r\n  updateValue\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(undefined);\r\n\r\n  const validateAndUpdate = val => {\r\n    val = val.replace(/[^0-9]/g, \"\");\r\n    setValue(val);\r\n    updateValue(+val);\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.root} item xs={6}>\r\n      {currency === \"USD\" ? (\r\n        <AttachMoneyIcon\r\n          className={classes.icon}\r\n          color={isChanged ? \"primary\" : \"secondary\"}\r\n        />\r\n      ) : (\r\n        <EuroSymbolIcon\r\n          className={classes.icon}\r\n          color={isChanged ? \"primary\" : \"secondary\"}\r\n        />\r\n      )}\r\n      <TextField\r\n        label={currency === \"USD\" ? \"USD\" : \"EUR\"}\r\n        className={classes.input}\r\n        value={\r\n          currency === \"USD\"\r\n            ? globalValue.usd\r\n              ? globalValue.usd\r\n              : \"\"\r\n            : globalValue.eur\r\n            ? globalValue.eur\r\n            : \"\"\r\n        }\r\n        color=\"secondary\"\r\n        disabled={isChanged}\r\n        onChange={e => validateAndUpdate(e.target.value)}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CurrencyContainer;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\n// Material UI components\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  RootRef,\r\n  CircularProgress,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\n\r\n// React components\r\nimport CurrencyContainer from \"../CurrencyContainer/CurrencyContainer\";\r\n\r\n// Animation kit\r\nimport gsap from \"gsap\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    witdh: \"70vw\"\r\n  },\r\n  icon: {\r\n    fontSize: \"4rem\",\r\n    margin: \"0 3vw 0 1vw\"\r\n  },\r\n  title: {\r\n    marginRight: \"3vw\"\r\n  },\r\n  header: {\r\n    borderBottom: \"1px solid rgba(0,0,0,0.15)\",\r\n    margin: \"0 0 25px 0\"\r\n  },\r\n  iconWrapper: {\r\n    padding: \"1vh\",\r\n    marginBottom: \"3vh\",\r\n    cursor: \"pointer\"\r\n  },\r\n  valuePanel: {\r\n    padding: \"6vh 0\"\r\n  }\r\n});\r\n\r\nconst AppCard = ({ isLoaded, updateGlobal, globalCurrencies }) => {\r\n  const classes = useStyles();\r\n  const usdRef = useRef();\r\n  const eurRef = useRef();\r\n  const btnRef = useRef();\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const [currencyValue, setCurrencyValue] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(\"changed\");\r\n    updateGlobal(currencyValue);\r\n  }, [currencyValue]);\r\n\r\n  const replaceCurrencies = () => {\r\n    gsap.from(btnRef.current, { rotation: 360, duration: 0.3 });\r\n    setIsChanged(!isChanged);\r\n    if (!isChanged) {\r\n      gsap.to(usdRef.current, { marginLeft: \"50%\" });\r\n      gsap.to(eurRef.current, { marginLeft: \"-100%\" });\r\n    } else {\r\n      gsap.to(usdRef.current, { marginLeft: \"0%\" });\r\n      gsap.to(eurRef.current, { marginLeft: \"0%\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item md={6}>\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          className={classes.header}\r\n          avatar={<MonetizationOnIcon className={classes.icon} />}\r\n          title={\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n              Cash Converter\r\n            </Typography>\r\n          }\r\n          subheader=\"Calculate currency values\"\r\n        />\r\n        <CardContent>\r\n          <Grid container>\r\n            {isLoaded ? (\r\n              <>\r\n                <Grid container justify=\"center\">\r\n                  <RootRef rootRef={btnRef}>\r\n                    <div\r\n                      onClick={replaceCurrencies}\r\n                      className={classes.iconWrapper}\r\n                    >\r\n                      <LoopIcon fontSize=\"large\" />\r\n                    </div>\r\n                  </RootRef>\r\n                </Grid>\r\n                <RootRef rootRef={usdRef}>\r\n                  <CurrencyContainer\r\n                    currency=\"USD\"\r\n                    isChanged={isChanged}\r\n                    globalValue={globalCurrencies}\r\n                    updateValue={value => {\r\n                      setCurrencyValue({\r\n                        currency: !isChanged ? \"USD\" : \"EUR\",\r\n                        value\r\n                      });\r\n                    }}\r\n                  />\r\n                </RootRef>\r\n                <RootRef rootRef={eurRef}>\r\n                  <CurrencyContainer\r\n                    currency=\"EUR\"\r\n                    isChanged={!isChanged}\r\n                    globalValue={globalCurrencies}\r\n                    updateValue={value => {\r\n                      setCurrencyValue({\r\n                        currency: !isChanged ? \"USD\" : \"EUR\",\r\n                        value\r\n                      });\r\n                    }}\r\n                  />\r\n                </RootRef>\r\n              </>\r\n            ) : (\r\n              <Grid container justify=\"center\">\r\n                <RootRef rootRef={btnRef}>\r\n                  <div className={classes.iconWrapper}>\r\n                    <CircularProgress color=\"secondary\" />\r\n                  </div>\r\n                </RootRef>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </CardContent>\r\n        <CardContent className={classes.valuePanel}></CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AppCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { get } from \"apicon.js\";\r\n\r\n// App components\r\nimport AppContainer from \"../../Components/AppContainer/AppContainer\";\r\nimport AppCard from \"../../Components/AppCard/AppCard\";\r\n\r\nconst App = () => {\r\n  const endpoint = \"http://api.nbp.pl/api/exchangerates/tables/a/?format=json\";\r\n\r\n  // const [isChanged, setChanged] = useState(false);\r\n  const [currenciesPrices, setCurrenciesPrices] = useState({\r\n    usd: 0,\r\n    eur: 0\r\n  });\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [currenciesVals, setCurrenciesVals] = useState({\r\n    usd: null,\r\n    eur: null\r\n  });\r\n  const [currencyFromUser, setCurrencyFromUser] = useState({\r\n    currency: \"USD\",\r\n    value: 0\r\n  });\r\n\r\n  const changeCurrenciesVals = ({ usd, eur }) => {\r\n    setCurrenciesVals({ usd, eur });\r\n  };\r\n\r\n  const updateValues = ({ currency, value }) => {\r\n    const { usd, eur } = currenciesPrices;\r\n    console.log(currenciesVals);\r\n    if (currency === \"USD\") {\r\n      setCurrenciesVals({\r\n        usd: value,\r\n        eur: +(value * (usd / eur)).toFixed(2)\r\n      });\r\n    } else {\r\n      setCurrenciesVals({\r\n        eur: value,\r\n        usd: +(value / (usd / eur)).toFixed(2)\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    get(endpoint)\r\n      .then(data => {\r\n        const prices = data[0].rates;\r\n        const usd = prices.filter(rate => rate.code === \"USD\")[0].mid;\r\n        const eur = prices.filter(rate => rate.code === \"EUR\")[0].mid;\r\n        setCurrenciesPrices({ usd, eur });\r\n      })\r\n      .then(() => setDataLoaded(true));\r\n  }, []);\r\n\r\n  return (\r\n    <AppContainer>\r\n      <AppCard\r\n        isLoaded={dataLoaded}\r\n        changeVals={changeCurrenciesVals}\r\n        globalCurrencies={currenciesVals}\r\n        updateGlobal={val => updateValues(val)}\r\n      />\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000\"\r\n    }\r\n  },\r\n  bg: {\r\n    backgroundColor: \"#424242\"\r\n  }\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Layouts/App/App\";\nimport \"./index.css\";\nimport { theme } from \"./Theme/theme\";\nimport { ThemeProvider } from \"@material-ui/core\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}